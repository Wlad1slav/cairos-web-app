import '@testing-library/jest-dom';
import { render, screen } from '@testing-library/react';
import LeftUntilHundred from "@/components/widgets/leftUntilHundred";
import {calculateForHundredYearTime} from "@/lib/utils";

describe('LeftUntilHundred', () => {

    it('Renders the calculation for 100 years from birthdate', () => {
        // Set a fixed date for the current date to have predictable tests
        const fixedNow = new Date('2024-09-01T00:00:00.000Z');
        jest.useFakeTimers().setSystemTime(fixedNow);

        // Example birthdate
        const birthdate = new Date('2000-01-01T00:00:00.000Z');

        render(<LeftUntilHundred birthdate={birthdate} />);

        // Calculate expected values
        const {days, weeks, months, years} = calculateForHundredYearTime(birthdate);

        expect(screen.getByText(`${days} –¥–Ω—ñ–≤ –¥–æ 100 —Ä–æ–∫—ñ–≤!`)).toBeInTheDocument();
        expect(screen.getByText(`–í–∞–º –∑–∞–ª–∏—à–∏–ª–æ—Å—è ${years} —Ä–æ–∫—ñ–≤ –∞–±–æ ${months} –º—ñ—Å—è—Ü—ñ–≤ –∞–±–æ ${weeks} —Ç–∏–∂–Ω—ñ–≤ –¥–æ 100 —Ä–æ–∫—ñ–≤`)).toBeInTheDocument();

        // Restore timers
        jest.useRealTimers();
    });

    it('Handles a birthdate exactly 100 years ago', () => {
        const fixedNow = new Date('2100-01-01T00:00:00.000Z');
        jest.useFakeTimers().setSystemTime(fixedNow);

        const birthdate = new Date('2000-01-01T00:00:00.000Z');

        render(<LeftUntilHundred birthdate={birthdate} />);

        expect(screen.getByText('–í–∏ –¥–æ—Å—è–≥–ª–∏ –º–µ—Ç–∏ üò±')).toBeInTheDocument();
        expect(screen.getByText('–£ –Ω–∞—Å –Ω–µ–º–∞—î —Å–ª—ñ–≤, –≤–∏ –ø—Ä–æ—Å—Ç–æ –≥–µ—Ä–æ–π! –í–∏ —Å—Ç–∞–ª–∏ –≥–µ—Ä–æ—î–º –Ω–µ —Ç—ñ–ª—å–∫–∏ —Å–≤–æ–≥–æ, –∞–ª–µ —ñ –Ω–∞—à–æ–≥–æ —Ä–æ–º–∞–Ω—É.')).toBeInTheDocument();

        jest.useRealTimers();
    });
});
